include "components/bootstrap_header.report"
include "components/bootstrap_table.report"
include "components/bootstrap_card.report"
include "components/bootstrap_tabs.report"
include "components/bootstrap_footer.report"

include "components/bootstrap_summary_qc.report"
include "components/bootstrap_parameters_table.report"
include "components/bootstrap_progress.report"

//local component from file
include "${baseDir}/components/quality_control_card.report"

def irisData = [
    ["Sepal Length", "Sepal Width", "Petal Length", "Petal Width", "Species"],
    [5.1, 3.5, 1.4, 0.2, "setosa"],
    [4.9, 3.0, 1.4, 0.2, "setosa"],
    // ... more data
]

def age = [2,3,4,5,6,7,8,9]
def salary = [100,200,300,400,500,600,700,800]

def primary = "#82715f6e"

report {

    template file("$baseDir/template/index.html")

    header {
        bootstrap_header (
            title: "Iris Dataset",
            description: "The Iris dataset is a well-known dataset in the field of machine learning and statistics. It was introduced by the biologist and statistician Ronald A. Fisher in 1936. The dataset consists of measurements of four features (sepal length, sepal width, petal length, and petal width) for 150 iris flowers, divided into three species: setosa, versicolor, and virginica.",
            color: primary
        )
    }

    content {

        bootstrap_card (title: "Dataset") {
            bootstrap_tabs {
                bootstrap_tab(id: "tab1", title: "Table") {
                    p "Simple Scatter plot"
                    bootstrap_table(data: irisData)
                }
                bootstrap_tab(id: "tab2", title: "Simple Scatter plot") {
                    p "Scatter plot visualizing age and salary."
                    plotly {
                        trace (
                              x: age,
                              y: salary,
                              mode: "markers",
                              type: "scatter"
                        )
                    }
                }
            }
        }

        // Using a Card Component to display the Iris dataset
        bootstrap_card (title: "Dataset") {
            p "Frequency (0.25)"
            bootstrap_progress(progress: 0.25 * 100, class: "my-3")
            bootstrap_progress(progress: 0.30 * 100, color: 'warning', height: "5px", class: "my-3")
            bootstrap_progress(progress: 0.30 * 100, color: 'primary', label: true)
        }

        // Using a Card Component to display the Iris dataset
        bootstrap_card (title: "Quality Control") {
            bootstrap_summary_qc(passed: 80, warnings: 15, errors: 5)

            // Define parameters as a Map
            def parameters = [
                "Files": "1",
                "Samples": "50",
                "Input Variants": "3,892",
                "Reference Mismatches": "0",
                "Tree Overlap (%)": "78.3",
                "Strand Flips": "0",
                "Out Of Range Variants": "0",
                "Multiallelic Variants": "275",
                "Indel Variants": "20",
                "VCF Filtered Variants": "0",
                "Duplicate Variants": "0",
                "Low Sample Call Rate": "0",
                "Monomorphic Variants": "3,160",
                "Variant Call Rate < 90%": "0"
            ]

            // Use the Bootstrap parameters table component
            bootstrap_parameters_table(parameters: parameters)
        }

        // Using a Card Component to display the Iris dataset
        quality_control_card (
            passed: 80,
            warnings: 15,
            errors: 5,
            parameters: [
                "Files": "1",
                "Samples": "50",
                "Input Variants": "3,892",
                "Reference Mismatches": "0",
                "Tree Overlap (%)": "78.3",
                "Strand Flips": "0",
                "Out Of Range Variants": "0",
                "Multiallelic Variants": "275",
                "Indel Variants": "20",
                "VCF Filtered Variants": "0",
                "Duplicate Variants": "0",
                "Low Sample Call Rate": "0",
                "Monomorphic Variants": "3,160",
                "Variant Call Rate < 90%": "0"
            ]
        )

        // Using a Card Component to display the Iris dataset
        quality_control_card (
            passed: 80,
            warnings: 15,
            errors: 5
        )

        // Using a Card Component to display the Iris dataset
        bootstrap_card (title: "Dataset") {
            p "Dataset Overview"
            bootstrap_table(data: irisData)
        }

        bootstrap_card (title: "Plotly22") {
            p "Simple Scatter plot"
            plotly {
                trace (
                      x: age,
                      y: salary,
                      mode: "markers",
                      type: "scatter"
                )
            }
        }

    }

    footer {
        bootstrap_footer(
            text: "This report was created by ${System.getProperty("user.name")} on ${new Date()}",
            color: primary
        )
    }

}
