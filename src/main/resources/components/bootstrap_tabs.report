class BootstrapTabsConfig {

    def tabs = []

    def bootstrap_tab(Map options, Closure body) {
        tabs << [id: Component.uniqueId(), title: options.title, content: body]
    }

}

component("bootstrap_tabs") {

    // options.body contains the elements in "bootstrap_tab" tags.
    def config = new BootstrapTabsConfig()
    options.body.delegate = config
    options.body.delegateStrategy = Closure.DELEGATE_FIRST
    options.body()

    div {
        // Add Bootstrap classes for tabs
        ul(class: "nav nav-tabs", role:"tablist") {
            // Iterate over config.tabs to create individual tabs
            config.tabs.eachWithIndex { tab, index ->
                li(class: "nav-item", role: "presentation") {
                    button(
                        class: "nav-link ${index == 0 ? 'active' : ''}",
                        id: "${tab.id}-tab",
                        "data-bs-toggle": "tab",
                        "data-bs-target": "#${tab.id}",
                        type:"button",
                        role:"tab",
                        "aria-controls": "profile",
                        "aria-selected": index == 0 ? "true" : "false",
                        tab.title)
                }
            }
        }

        // Tab content
        div(class: "tab-content") {
            // Iterate over config.tabs to create content for each tab
            config.tabs.eachWithIndex { tab, index ->
                div(
                    class: "tab-pane p-3 ${index == 0 ? 'show active' : ''}",
                    id: "${tab.id}",
                    role: "tabpanel",
                    "aria-labelledby": "${tab.id}-tab"
                ) {
                    // Set tab content. its a closure, use render
                    render(tab.content)
                }
            }
        }
    }
}
